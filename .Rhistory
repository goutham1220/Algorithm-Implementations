for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
# for(i in 1:nclusters){
# alldistances[i,] = distance(dataset, centroids[i,1:2])
# }
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
# for(i in 1:nclusters){
# alldistances[i,] = distance(dataset, centroids[i,1:2])
# }
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
# for(i in 1:nclusters){
# alldistances[i,] = distance(dataset, centroids[i,1:2])
# }
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
# for(i in 1:nclusters){
# alldistances[i,] = distance(dataset, centroids[i,1:2])
# }
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
#Setting up the datasets
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
alldistances
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
clusterAssignment
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[clusterAssignment == 1:nclusters,1], y=dataset[clusterAssignment == 1:nclusters,2]), colour=centroids[2,3], size=2)
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2)
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2)
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(alldistances[i,])
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i, 2] = mean(dataset[clusterAssignment == i, 2])
}
clusterAssignment = apply(alldistances, MARGIN = 1, which.min)
clusterAssignment
centroids = apply(dataset[clusterAssignment == 1:4,], MARGIN = 1, mean)
centroids
centroids = apply(dataset[clusterAssignment == 1:4,], MARGIN = 2, mean)
centroids
centroids = apply(dataset[clusterAssignment == 1:4,1:2], MARGIN = 1, mean)
centroids
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i,2] = mean(dataset[clusterAssignment == i,2])
}
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i,2] = mean(dataset[clusterAssignment == i,2])
}
library(ggplot2)
set.seed(2)
#Setting up the datasets
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
clusterAssignment = apply(alldistances, MARGIN = 1, which.min)
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i,2] = mean(dataset[clusterAssignment == i,2])
}
centroids = apply(dataset[clusterAssignment == 1:4,], MARGIN = 1, mean)
cost = sum(alldistances)
for(i in 1:nclusters){
cost = cost + sum(apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset[clusterAssignment == i]))
}
library(ggplot2)
set.seed(2)
#Setting up the datasets
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
clusterAssignment = apply(alldistances, MARGIN = 1, which.min)
for(i in 1:nclusters){
cost = cost + sum(apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset[clusterAssignment == i]))
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i,2] = mean(dataset[clusterAssignment == i,2])
}
library(ggplot2)
set.seed(2)
#Setting up the datasets
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1:2] = sample(1:100, npoints * 2, replace = TRUE)
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 3)
centroids[,1:2] =  sample(1:100, nclusters * 2)
centroids[,3] = 1:nrow(centroids)
ggplot(data = NULL, aes(x = dataset[,1], y = dataset[,2])) +
geom_point(size=2, shape=23) + xlab("X") + ylab("Y") +
geom_point(aes(x = data.frame(dataset[,1]), y = data.frame(dataset[,2])), color = "white") +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=3)
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
alldistances = matrix(nrow = npoints, ncol = nclusters)
alldistances = apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset)
clusterAssignment = vector()
clusterAssignment = apply(alldistances, MARGIN = 1, which.min)
for(i in 1:nclusters){
cost = cost + sum(apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset[clusterAssignment == i],))
}
ggplot(data = NULL) +
geom_point(aes(x=centroids[,1], y=centroids[,2]), colour=centroids[,3], size=5) +
geom_point(aes(x=dataset[,1], y=dataset[,2]), colour=clusterAssignment, size=2) +
xlab("X") + ylab("Y")
for(i in 1:nclusters){
centroids[i,1] = mean(dataset[clusterAssignment == i,1])
centroids[i,2] = mean(dataset[clusterAssignment == i,2])
}
cost = cost + sum(apply(centroids[,1:2], MARGIN = 1, distance, matrix = dataset[clusterAssignment == i]))
for(i in 1:nclusters){
cost = cost + sum(distance(dataset[clusterAssignment == i,], centroids[i,]))
}
cost
