geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
distance <- function(matrix, centroid){
dist = vector()
for(i in 1:nrow(matrix)){
dist[i] = sqrt((centroid[1] - matrix[i,1])^2 + (centroid[2] - matrix[i,2])^2)
}
return(dist)
}
distances1 = distance(dataset, centroid1)
distances2 = distance(dataset, centroid2)
distances3 = distance(dataset, centroid3)
distances4 = distance(dataset, centroid4)
all4distances = matrix(ncol = npoints, nrow = 4)
all4distances[1,] = distances1
all4distances[2,] = distances2
all4distances[3,] = distances3
all4distances[4,] = distances4
clusterAssignment = vector()
for(i in 1:npoints){
clusterAssignment[i] = which.min(all4distances[,i])
}
cluster1 = matrix(data = NA, npoints, ncol = 2)
cluster2 = matrix(data = NA, npoints, ncol = 2)
cluster3 = matrix(data = NA, npoints, ncol = 2)
cluster4 = matrix(data = NA, npoints, ncol = 2)
for(i in 1:npoints){
if(clusterAssignment[i] == 1){
cluster1[i,] = dataset[i,]
} else if(clusterAssignment[i] == 2){
cluster2[i,] = dataset[i,]
} else if(clusterAssignment[i] == 3){
cluster3[i,] = dataset[i,]
} else if(clusterAssignment[i] == 4){
cluster4[i,] = dataset[i,]
}
}
cluster1 = cluster1[rowSums(is.na(cluster1)) != ncol(cluster1), ]
cluster2 = cluster2[rowSums(is.na(cluster2)) != ncol(cluster2), ]
cluster3 = cluster3[rowSums(is.na(cluster3)) != ncol(cluster3), ]
cluster4 = cluster4[rowSums(is.na(cluster4)) != ncol(cluster4), ]
ggplot(data = NULL) +
geom_point(aes(x=centroid1[1], y=centroid1[2]), colour="blue", size=5) +
geom_point(aes(x=cluster1[,1], y=cluster1[,2]), colour="blue", size=2) +
geom_point(aes(x=centroid2[1], y=centroid2[2]), colour="red", size=5) +
geom_point(aes(x=cluster2[,1], y=cluster2[,2]), colour="red", size=2) +
geom_point(aes(x=centroid3[1], y=centroid3[2]), colour="green", size=5) +
geom_point(aes(x=cluster3[,1], y=cluster3[,2]), colour="green", size=2) +
geom_point(aes(x=centroid4[1], y=centroid4[2]), colour="black", size=5) +
geom_point(aes(x=cluster4[,1], y=cluster4[,2]), colour="black", size=2) +
xlab("X") + ylab("Y")
for(i in 1:2){
centroid1[i] = mean(cluster1[,i])
centroid2[i] = mean(cluster2[,i])
centroid3[i] = mean(cluster3[,i])
centroid4[i] = mean(cluster4[,i])
}
#initialize centroids to random values
centroids = matrix(data = sample(1:100, npoints), ncol = nclusters * 2)
library(ggplot2)
set.seed(2)
#Setting up the datasets
npoints = 100
nclusters = 4
dataset = matrix(data = NA, npoints, 2)
dataset[,1] = sample(1:100, npoints)
dataset[,2] = sample(1:100, npoints)
#initialize centroids to random values
centroids = matrix(data = sample(1:100, npoints), ncol = nclusters * 2)
centroids = sample(1:100, npoints)
centroids
#initialize centroids to random values
centroids = matrix(data = NA, ncol = nclusters * 2)
centroids = sample(1:100, npoints)
centroids
#initialize centroids to random values
centroids = matrix(data = NA, nrow = npoints, ncol = nclusters * 2)
centroids = sample(1:100, npoints)
centroids
centroids
#initialize centroids to random values
centroids = matrix(data = NA, nrow = npoints, ncol = nclusters * 2)
centroids
#initialize centroids to random values
centroids = matrix(data = NA, nrow = npoints, ncol = nclusters * 2)
for(i in 1:nclusters*2){
centroids[i] = sample(1:100, npoints)
}
for(i in (1:npoints){
for(i in (1:npoints)){
centroids[i] = sample(1:100, 2 * nclusters)
}
warnings()
centroids
for(i in (1:npoints)){
centroids[,i] = sample(1:100, 1)
}
for(i in (1:nclusters * 2)){
centroids[,i] = sample(1:100, 1)
}
centroids
centroids[,] = sample(1:100, 1)
centroids
centroids = sample(1:100, npoints * nclusters)
centroids = sample(1:100, npoints * nclusters, replace = TRUE)
centroids
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters * 2, ncol = 2)
centroids = sample(1:100, nclusters * 4, replace = TRUE)
centroids
#initialize centroids to random values
centroids = matrix(data = NA, nrow = nclusters, ncol = 2)
centroids[, 1] =  sample(1:100, nclusters)
centroids[, 1] =  sample(1:100, nclusters)
centroids[, 2] =  sample(1:100, nclusters)
centroids
centroids[,] =  sample(1:100, nclusters * 2)
centroids
